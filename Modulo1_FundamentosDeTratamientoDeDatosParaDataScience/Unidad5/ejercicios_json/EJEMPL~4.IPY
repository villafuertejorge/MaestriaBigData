{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Teclea la direcci贸n IP a consultar o FIN para terminar: 54.148.84.95\n",
      "Recuperando http://ip-api.com/json/54.148.84.95\n",
      "Recuperados 303  caracteres\n",
      "City:  Portland\n",
      "Country:  United States\n",
      "Country Code:  US\n",
      "isp:  Amazon.com, Inc.\n",
      "Lat:  45.5235\n",
      "Log:  -122.676\n",
      "Region:  OR\n",
      "regionName:  Oregon\n",
      "timezone:  America/Los_Angeles\n",
      "Teclea la direcci贸n IP a consultar o FIN para terminar: FIn\n",
      "Recuperando http://ip-api.com/json/FIn\n",
      "Recuperados 57  caracteres\n",
      "Error al obtener datos invalid query\n",
      "Teclea la direcci贸n IP a consultar o FIN para terminar: FIN\n"
     ]
    }
   ],
   "source": [
    "import urllib \n",
    "import json \n",
    "\n",
    "serviceurl = 'http://ip-api.com/json/' \n",
    "while True: \n",
    "    ip = input('Teclea la direcci贸n IP a consultar o FIN para terminar: ')\n",
    "    if ip == 'FIN':\n",
    "        break\n",
    "    else:\n",
    "        url = serviceurl + ip \n",
    "        print ('Recuperando', url) \n",
    "        request = urllib.request.Request(url)\n",
    "        request.add_header('User-Agent',\"cheese\")\n",
    "        data = urllib.request.urlopen(request).read()\n",
    "        print ('Recuperados',len(data),' caracteres') \n",
    "        try: \n",
    "            js = json.loads(data)\n",
    "        except: js - None\n",
    "        if ( \"status\" in js and js['status'] == \"fail\"  ):\n",
    "            print (\"Error al obtener datos\",js['message'])\n",
    "        else:\n",
    "            print (\"City: \",js['city'])\n",
    "            print (\"Country: \",js['country'])\n",
    "            print (\"Country Code: \",js['countryCode'])\n",
    "            print (\"isp: \",js['isp'])\n",
    "            print (\"Lat: \",js['lat'])\n",
    "            print (\"Log: \",js['lon'])\n",
    "            print (\"Region: \",js['region'])\n",
    "            print (\"regionName: \",js['regionName'])\n",
    "            print (\"timezone: \",js['timezone'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
